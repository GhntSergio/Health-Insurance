-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS insurance.address
(
    address_id integer NOT NULL,
    street_address character varying(70) COLLATE pg_catalog."default",
    apartment_no integer NOT NULL,
    city character varying(70) COLLATE pg_catalog."default",
    county character varying(70) COLLATE pg_catalog."default",
    country character varying(70) COLLATE pg_catalog."default",
    zipcode character varying(70) COLLATE pg_catalog."default",
    CONSTRAINT address_pkey PRIMARY KEY (address_id)
);

CREATE TABLE IF NOT EXISTS insurance.claims
(
    claim_id integer NOT NULL,
    status_id integer NOT NULL,
    date_of_service date,
    day_of_service integer,
    month_of_service integer,
    year_of_service integer,
    received_date date,
    received_day integer,
    received_month integer,
    received_year integer,
    add_by integer,
    CONSTRAINT claims_pkey PRIMARY KEY (claim_id)
);

CREATE TABLE IF NOT EXISTS insurance.claims_payment
(
    claims_payment_id integer NOT NULL,
    billed_amount integer,
    approuved_amount integer,
    copay_amount integer,
    coinsurance_amount integer,
    deductible_amount integer,
    net_payment integer,
    claim_id integer NOT NULL,
    CONSTRAINT claims_payment_pkey PRIMARY KEY (claims_payment_id)
);

CREATE TABLE IF NOT EXISTS insurance.coverage
(
    coverage_id integer NOT NULL,
    member_id integer NOT NULL,
    coverage_name character varying(75) COLLATE pg_catalog."default",
    effective_date character varying(75) COLLATE pg_catalog."default",
    day_effective character varying(75) COLLATE pg_catalog."default",
    month_effective character varying(75) COLLATE pg_catalog."default",
    year_effective character varying(75) COLLATE pg_catalog."default",
    term_date character varying(75) COLLATE pg_catalog."default",
    term_day character varying(75) COLLATE pg_catalog."default",
    term_month character varying(75) COLLATE pg_catalog."default",
    term_year character varying(75) COLLATE pg_catalog."default",
    CONSTRAINT coverage_pkey PRIMARY KEY (coverage_id)
);

CREATE TABLE IF NOT EXISTS insurance.member
(
    member_id integer NOT NULL,
    member_first_name character varying(75) COLLATE pg_catalog."default",
    member_last_name character varying(75) COLLATE pg_catalog."default",
    address_id integer NOT NULL,
    gender character varying(75) COLLATE pg_catalog."default",
    member_dob date,
    day_memberd integer,
    month_memberd integer,
    year_memberd integer,
    claim_id integer NOT NULL,
    coverage_id integer NOT NULL,
    CONSTRAINT member_pkey PRIMARY KEY (member_id)
);

CREATE TABLE IF NOT EXISTS insurance.provider
(
    provider_id integer NOT NULL,
    provider_first_name character varying(75) COLLATE pg_catalog."default",
    provider_last_name character varying(75) COLLATE pg_catalog."default",
    degree character varying(75) COLLATE pg_catalog."default",
    network character varying(75) COLLATE pg_catalog."default",
    claim_id integer NOT NULL,
    practice_name character varying(75) COLLATE pg_catalog."default",
    address_id integer,
    gender character varying(75) COLLATE pg_catalog."default",
    CONSTRAINT provider_pkey PRIMARY KEY (provider_id)
);

CREATE TABLE IF NOT EXISTS insurance.status
(
    status_id integer NOT NULL,
    claim_status character varying(75) COLLATE pg_catalog."default",
    type character varying(75) COLLATE pg_catalog."default",
    CONSTRAINT status_pkey PRIMARY KEY (status_id)
);

ALTER TABLE IF EXISTS insurance.claims_payment
    ADD CONSTRAINT claims_payment_claim_id_fkey FOREIGN KEY (claim_id)
    REFERENCES insurance.claims (claim_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS insurance.member
    ADD CONSTRAINT member_address_id_fkey FOREIGN KEY (address_id)
    REFERENCES insurance.address (address_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS insurance.member
    ADD CONSTRAINT member_claim_id_fkey FOREIGN KEY (claim_id)
    REFERENCES insurance.claims (claim_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS insurance.member
    ADD CONSTRAINT member_coverage_id_fkey FOREIGN KEY (coverage_id)
    REFERENCES insurance.coverage (coverage_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS insurance.provider
    ADD CONSTRAINT provider_address_id_fkey FOREIGN KEY (address_id)
    REFERENCES insurance.address (address_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS insurance.provider
    ADD CONSTRAINT provider_claim_id_fkey FOREIGN KEY (claim_id)
    REFERENCES insurance.claims (claim_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;